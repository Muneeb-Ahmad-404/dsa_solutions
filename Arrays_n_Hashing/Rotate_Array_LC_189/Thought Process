We are provided with a list and a int value k
we have to rotate the list k times
rotating the list means that we pick the element from end and put it at the start
the rest of the elements move ahead by one place
Also the k can be greater then the length of the given list


Brute-Force: run a loop k times
            for each iteration save the last element and move the rest of the elements ahead
            by one place then store the last element at the start.

            time complexity:O(n*k)
            space complexity:O(1)

Three reverse:
    lets say we have got a list 1,2,3,4,5,6,7 and k = 3
    now we need to revere the whole list we get 7,6,5,4,3,2,1
    now reverse the 0, 3 part indices 0,1,2 we get 5,6,7,4,3,2,1
    now reverse the part ahead of k indices 3,4,5,6 we get 5,6,7,1,2,3,4

    this is our solution (as k can be greater then the length we need to adjust its value at the start
    as  k = k%len(nums)). 

    time complexity:O(n)
    space complexity:O(1)




